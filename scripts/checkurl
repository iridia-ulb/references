#!/bin/bash
set -u
#set -o pipefail
# TODO:
# * Make check_url more robust
#   We get 403 for many sites because they block curl.

# File of known broken URLs or URLs that we cannot verify because curl is blocked (403)
bad_urls="$1"
shift 1
tmpfile="$(mktemp)"
#echo "tmpfile: $tmpfile"
status_file="$(mktemp)"
#echo "status_file: $status_file"
ANYBROKEN=0
for filename in "$@"; do
    if [[ $filename == *.bib ]]; then
        grep --no-filename -v '^%' "$filename" \
            | grep -o '[{"]https\?://[^"}]\+[}"]' \
            | grep -v -F -f "$bad_urls" \
            | sed -E 's/[{"](.+)[}"]/\1/' | sort -u  > $tmpfile
        grep --no-filename -v '^%' "$filename" \
            | grep -E -o 'doi\s+=\s+[{=][^}"]+[}"]' \
            | grep -v -F -f "$bad_urls" \
            | sed -E 's#^.+[{"](.+)[}"]#https://doi.org/\1#' | sort -u >> $tmpfile

        head -n 200 "$tmpfile" \
            | xargs \
                  curl --connect-timeout 5 --max-redirs 5 --retry 2 --parallel \
                  --user-agent 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36' \
                  -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8' -H 'Accept-Language: en-GB,en;q=0.5' -H 'Accept-Encoding: gzip, deflate, br' -H 'DNT: 1' \
                  -H 'Connection: keep-alive' -H 'Upgrade-Insecure-Requests: 1' -H 'Sec-Fetch-Dest: document' -H 'Sec-Fetch-Mode: navigate' -H 'Sec-Fetch-Site: none' -H 'Sec-Fetch-User: ?1' -H 'Sec-GPC: 1' \
                  -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' \
                  --head --insecure --referer ';auto' --location --globoff \
                  --write-out '===HTTP_STATUS_CODE:%{url}|%{http_code}\n' --no-styled-output --silent --output /dev/null \
            | grep -F '===HTTP_STATUS_CODE' | cut -d: -f2- > $status_file
        while IFS='|' read -r url code; do
            if [[ $code != 200 ]]; then
               url=${url#https://doi.org/}
               where=$(grep -H -n -F "$url" "$filename")
               echo "NOTFOUND:$code: $where"
               ANYBROKEN=1
            fi
        done < "$status_file"
    fi
done
rm -f "$tmpfile" "$status_file"
exit $ANYBROKEN
